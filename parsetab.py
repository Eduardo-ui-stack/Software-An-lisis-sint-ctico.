
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'DIVIDE ELSE IF LPAREN MINUS NUMBER PLUS RPAREN TIMES WHILEexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDE expressionexpression : LPAREN expression RPARENexpression : NUMBERexpression : IF expressionexpression : WHILE expression'
    
_lr_action_items = {'LPAREN':([0,2,4,5,6,7,8,9,],[2,2,2,2,2,2,2,2,]),'NUMBER':([0,2,4,5,6,7,8,9,],[3,3,3,3,3,3,3,3,]),'IF':([0,2,4,5,6,7,8,9,],[4,4,4,4,4,4,4,4,]),'WHILE':([0,2,4,5,6,7,8,9,],[5,5,5,5,5,5,5,5,]),'$end':([1,3,11,12,13,14,15,16,17,],[0,-6,-7,-8,-1,-2,-3,-4,-5,]),'PLUS':([1,3,10,11,12,13,14,15,16,17,],[6,-6,6,6,6,6,6,6,6,-5,]),'MINUS':([1,3,10,11,12,13,14,15,16,17,],[7,-6,7,7,7,7,7,7,7,-5,]),'TIMES':([1,3,10,11,12,13,14,15,16,17,],[8,-6,8,8,8,8,8,8,8,-5,]),'DIVIDE':([1,3,10,11,12,13,14,15,16,17,],[9,-6,9,9,9,9,9,9,9,-5,]),'RPAREN':([3,10,11,12,13,14,15,16,17,],[-6,17,-7,-8,-1,-2,-3,-4,-5,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([0,2,4,5,6,7,8,9,],[1,10,11,12,13,14,15,16,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expression","S'",1,None,None,None),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','sintactico.py',5),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','sintactico.py',6),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','sintactico.py',7),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','sintactico.py',8),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','sintactico.py',15),
  ('expression -> NUMBER','expression',1,'p_expression_number','sintactico.py',19),
  ('expression -> IF expression','expression',2,'p_expression_if','sintactico.py',23),
  ('expression -> WHILE expression','expression',2,'p_expression_while','sintactico.py',28),
]
